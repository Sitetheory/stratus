/* Based on Angular Material 8+ */
.tree {
  //margin: 0 25px 25px 0;
  //display: inline-block;
  //vertical-align: top;
  .display {
    &-none {
      display: none;
    }
  }
  .position {
    &-absolute {
      position: absolute;
    }
  }
  // SVG Colors
  .svg-grey {
    svg g {
      fill: #666666;
    }
  }
  .visibility-off {
    svg g {
      fill: #FF5B3A;
    }
  }
  .full {
    &-width {
      width: 100%;
    }
  }
  ul, li {
    margin-top: 0;
    margin-bottom: 0;
    list-style-type: none;
  }
  .float-right {
    position: relative;
    float: right;
  }
  // Drop Location Borders (Only while Dragging)
  .cdk-drop-list-dragging {
    .drop {
      &-inside {
        border: 2px solid #00b7ff !important;
        //padding-top: 5px;
        //padding-bottom: 5px;
      }
      &-before {
        border-top: 2px solid #00b7ff !important;
        //padding-top: 5px;
        //padding-bottom: 5px;
      }
      &-after {
        border-bottom: 2px solid #00b7ff !important;
        //padding-top: 5px;
        //padding-bottom: 5px;
      }
    }
  }
  .tree-node {
    // We have to use 'block' since 'flex' makes the Drag & Drop even more inaccurate
    //display: block;

    // Grid works better for alignment and Drag & Drop calculations
    display: grid;

    // Padding Options
    //padding-top: .225rem;
    //padding-bottom: .225rem;
    //padding: 20px 10px;

    // Height & Alignment
    //min-height: 2.5rem;
    vertical-align: middle;
    place-content: center start;

    //color: rgba(0, 0, 0, 0.87);

    // Flex Design (Doesn't work well with Drag & Drop(
    //display: flex;
    //flex-direction: row;

    // Flex Alignment
    //align-items: center;
    //justify-content: space-between;
    //box-sizing: border-box;

    // Cursor
    cursor: move;

    // Alternate Indentation Calculations
    //&:before {
    //  position: absolute;
    //  top: 15px;
    //  left: 0;
    //  width: 10px;
    //  height: 1px;
    //  margin: auto;
    //  content: '';
    //  background-color: #666;
    //}

    // Material Buttons
    a, mat-button, mat-icon-button {
      cursor: pointer;
    }
    // only show certain elements on hover
    .hover {
      &-box {
        padding-right: 0.5rem;
      }
      &-box:hover ~ .hover-show {
        display: unset;
      }
      &-show {
        display: none;
        padding-bottom: 1rem;
        padding-right: 5rem;
        &:hover {
          display: unset;
        }
      }
    }

    .tree-node {
      // be explicit for child padding
      padding-left: 2.5rem;
      .tree-node-content {
        padding-top: 0.25rem;
        padding-bottom: 0.25rem;
        .node-name {
          font-size: 10pt;
        }
      }

      // Debug Child Borders
      //border: dashed 1px #ccc;
    }
    .tree-node-content {
      // Cell Borders
      &.border {
        border: dashed 1px #ccc;
      }
      .node-name {
        font-weight: bold;
        font-size: 15pt;
        padding-right: 0.5rem;
      }
      // this maintains alignment for parents without children
      .mat-button-placeholder {
        display: inline-block;
        width: 40px;
        height: 40px;
        vertical-align: baseline;
        line-height: 40px;
      }
      padding-top: 1rem;
      padding-bottom: 1rem;
      padding-right: 0.5rem;
      //.mat-icon-button {
      //  width: auto;
      //  height: auto;
      //}
      .visibility-off {
        opacity: 0.5;
      }
      .type-icon {
        height: 15px;
        width: 22px;
      }
      .type-none {
        padding-left: 6px;
      }
      .route-none {
        color: #FF5B3A;
      }
      .mat-button-disabled {
        height: 24px;
      }
    }
    &-drag {
      &-preview {
        //box-sizing: border-box;
        //border-radius: 4px;
        //padding: 10px;
        //box-shadow: 2px 2px 2px 1px rgba(0, 0, 0, 0.2);
      }
    }
    &-drop-list {
      //border: solid 1px #ccc;
      //min-height: 20px;
      //border-radius: 4px;
      //overflow: hidden;
      //display: block;
    }
    &.cdk-drop-list-dragging {
      .tree-node:not(.cdk-drag-placeholder) {
        transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);
      }
    }
    &:last-child {
      //border: none;
    }
  }
  .cdk {
    // NOTE: Much of these Drag Selectors won't work, since this element gets pulled out of the Tree Element when being dragged.
    &-drag {
      &-preview {
        //box-sizing: border-box;
        //border-radius: 4px;
        //box-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.2),
        //0 8px 10px 1px rgba(0, 0, 0, 0.14),
        //0 3px 14px 2px rgba(0, 0, 0, 0.12);
      }
      &-placeholder {
        //opacity: 0;
      }
      &-animating {
        //transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);
      }
    }
    &-drop-list {
      &-dragging {
        //min-width: 100px;
        //min-height: 20px;
        //border-style: dashed !important;
        //border-radius: 4px !important;
        //background: lightgreen !important;
        //.tree-node-drop-list {
        //  min-width: 100px;
        //  min-height: 20px;
        //  border-style: dashed !important;
        //  border-radius: 4px !important;
        //}
        //&.tree-node-drop-list {
        //  min-width: 100px;
        //  min-height: 20px;
        //  border-style: dashed !important;
        //  border-radius: 4px !important;
        //}
        .hover-show {
          display: none !important;
        }
      }
      &-receiving {
        //min-width: 100px;
        //min-height: 20px;
        //border-style: dashed !important;
        //border-radius: 4px !important;
        //background: lightyellow !important;
        .tree-node-drop-list {
          //min-width: 100px;
          //min-height: 20px;
          //border-style: dashed !important;
          //border-radius: 4px !important;
          //background: lightcyan !important;
        }
        &.tree-node-drop-list {
          //min-width: 100px;
          //min-height: 20px;
          //border-style: dashed !important;
          //border-radius: 4px !important;
          //background: lightsalmon !important;
        }
      }
    }
  }
}
//.tree-node {
//  z-index: 994;
//  .tree-node {
//    z-index: 995;
//    .tree-node {
//      z-index: 996;
//      .tree-node {
//        z-index: 997;
//        .tree-node {
//          z-index: 998;
//          .tree-node {
//            z-index: 999;
//          }
//        }
//      }
//    }
//  }
//}

// NOTE: CDK Drag needs to be outside .tree, since this element gets pulled out of the Tree Element when being dragged.
.cdk {
  &-drag {
    &-preview {
      box-sizing: border-box;
      border-radius: 4px;
      //box-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.2),
      //0 8px 10px 1px rgba(0, 0, 0, 0.14),
      //0 3px 14px 2px rgba(0, 0, 0, 0.12);
      padding: 0 !important;
      .hover-show {
        display: none !important;
      }
    }
    // Dragging Placeholder
    &-placeholder {
      opacity: 50%;
      display: none !important;
      // Hide Hover Buttons
      .hover-show {
        display: none !important;
      }
      // Hide Children
      .tree-node-drop-list {
        display: none !important;
      }
    }
    //&-animating {
    //  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);
    //}
  }
}

// Tree Dialog
sa-tree-dialog,
sa-internal-tree-dialog {
  .mat-dialog-title {
    margin-bottom: 0;
  }
  .mat-tab-body {
    margin-top: 20px;
  }
  .tree-dialog-content {
    .form-field {
      width: 320px;
    }
    .dialog-form {
      margin-top: 20px;
    }
    .radio {
      &-group {
        //display: flex;
        //flex-direction: column;
        //margin: 15px 0;
      }
      &-button {
        //margin: 5px;
        padding: 0 5px;
      }
    }
    // SVG Colors
    .svg-grey {
      svg g {
        fill: #666666;
      }
    }
  }
}
