
/* Styles for Both Media Selector and Media Selected Areas */

sa-media-selector,
sa-internal-media-selector,
.media-selected-box.cdk-drag-preview {
  .content-type {
    margin-bottom: 2px;
    md-icon,
    mat-icon {
      margin-right: 4px;
      height: 14px;
      width: 14px;
      min-height: 14px;
      min-width: 14px;
    }
    .content-type-name {
      font-weight: bold;
      font-size: 11px;
      text-transform: uppercase;
      letter-spacing: 1px;
    }
  }
  .no-image-icon {
    md-icon,
    mat-icon {
      height: 28px;
      width: 28px;
      min-height: 28px;
      min-width: 28px;
      svg g {
        fill: #FFF;
      }
    }
  }
  .shapeholder {
    width: 100%;
    display: block;
  }
}
.media-selected-box.cdk-drag-preview {
  .column-title h3 {
    margin: 0 0 5px;
    font-size: 16px;
  }
}

// the dragging class appears on the
// placeholder of what is being dragged
.media-selector {
  .cdk-drop-list {
    &.cdk-drop-list-dragging {
      .shapeholder {
        width: 80px;
        display: block;
      }
    }
  }
}

/* Draggable Media Selected List */

.media-selector-wrapper {
  background: rgba(255, 255, 255, .4);
  margin-top: 20px;
  padding: 40px;
}

/* Based on Angular Material 8+ */

.media-selector {
  .media-selected {
    // Note: an ampersand appears twice in this selector
    &-list.cdk-drop-list-dragging &-box:not(.cdk-drag-placeholder) {
      transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);
    }
  }
  // Note: I added a selector for the cdk-drag-placeholder class because we lose the outer container when dragging,
  //       but it doesn't work.
  //.cdk-drag-placeholder,
  .media-selected,
  ul.media-selected {
    &-container {
      display:flex;
      flex-wrap: wrap;
    }
    &-list {
      //width: 1000px;
      max-width: 100%;
      //border: solid 1px #ccc;
      min-height: 60px;
      display: flex;
      flex-direction: row;
      //background: white;
      //border-radius: 4px;
      //overflow: hidden;
      &-grid {
        flex-wrap: wrap;
      }
      .shapeholder {
        width: 80px;
        display: block;
      }
    }
  }
  .media-selected,
  li.media-selected {
    &-box {
      //width: 75px;
      //height: 75px;
      //padding: 20px 10px;
      //width: 12.5%;
      padding: 4px;
      //border-right: solid 1px #ccc;
      color: rgba(0, 0, 0, 0.87);
      // FIXME: when this uses display:flex, the box collapses
      display: flex;
      flex-direction: row;
      //align-items: center;
      //justify-content: center;
      //justify-content: space-between;
      text-align: center;
      //border-radius: 4px;
      //position: relative;
      //box-sizing: border-box;
      //background: white;
      font-size: 14px;
      transition: box-shadow 200ms cubic-bezier(0, 0, 0.2, 1);
      //box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2),
      //0 2px 2px 0 rgba(0, 0, 0, 0.14),
      //0 1px 5px 0 rgba(0, 0, 0, 0.12);
      // this forces the cells to grow to fit the row
      &-grow {
        flex-grow: 1;
      }
      // this forces all cells to wrap
      &-grid {
        flex-wrap: wrap;
      }
      // this forces all cells on one line instead of wrapping
      &-row {
        flex-basis: 0;
      }
      // this is the default cursor for boxes
      cursor: pointer;
      // this changes the cursor for movable boxes
      &.cdk-drag {
        cursor: move;
      }
    }
    &-box:active {
      //box-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.2),
      //0 8px 10px 1px rgba(0, 0, 0, 0.14),
      //0 3px 14px 2px rgba(0, 0, 0, 0.12);
      opacity: 0.6;
    }
    &-box:last-child {
      //border: none;
    }
  }
  .cdk-drop {
    &-list {
      display: flex;
      //padding-right: 10px;
      //padding-bottom: 10px;
    }
  }
}

.cdk-drag {
  &-preview {
    // Note: these are the original drag preview styles Angular+
    //box-sizing: border-box;
    //border-radius: 4px;
    //box-shadow: 2px 2px 4px rgba(0,0,0,.3)
    //box-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.2),
    //0 8px 10px 1px rgba(0, 0, 0, 0.14),
    //0 3px 14px 2px rgba(0, 0, 0, 0.12);
  }
  &-placeholder {
    opacity: 0.3;
    //opacity: 0.7;
    //opacity: 0;
    background: rgba(0, 0, 0, .4);
    transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);
  }
  &-animating {
    transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);
  }
  // hide tooltip in preview (dragged element) and placeholder in the list
  &-preview, &-placeholder {
    .info-hover-container {
      display: none;
    }
    list-style: none;
  }
}

.custom-ghost-placeholder {
  background: rgba(0, 0, 0, .4);
  min-height: 60px;
  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);
}


/* Selected List Custom */

sa-media-selector,
sa-internal-media-selector,
.media-selected-box.cdk-drag-preview {
  .column-image,
  .column-title,
  .column-action {
    float: left;
  }
}

/* Full Size */

.full {
  &-width {
    width: 100%;
  }
  &-height {
    height: 100%;
  }
}

/* Text Transforms */
.uppercase {
  text-transform: uppercase;
}
.lowercase {
  text-transform: lowercase;
}
